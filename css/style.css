/* As explicações estão em ordem de cada função usada*/

.t{
    font-size: 280%;
    font-family: Impact;
    text-align: center;
}
/* Div com alteração tamanho do texto, fonte e alinhado no centro*/

.text{
  font-size: x-large;
  font-family: serif;
  font-style: oblique;
}
/* Div com alteração tamanho do texto, fonte e estilo de texto*/

.textfn{
  font-size: 200%;
  font-family: serif;
  font-style: oblique;
}
/* Div com alteração tamanho do texto, fonte e estilo de texto*/

.dtnm{
  font-family: Comic Sans MS;
  text-align: right;
}
/* Div com alteração na fonte e alinhado no lado direito*/

.tum
{
  font-size: 260%;
  font-family: monospace;
  color: rgb(32, 32, 32);
  font-style: oblique;
  text-align: center;
}
/* Div com alteração tamanho do texto, fonte, cor, estilo e alinhado no centro*/

.container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
}
/* Div com lay flexiveis, direção da esquerda para direita, deixa alinhado separadamente com espaços iguais e deixa organizado juntos */
  
.tooltip {
  position: relative;
  border-bottom: 1px dotted black; 
  cursor: help;
  margin-bottom: 10px; 
}
/* Div com sobrepoe entre si, linha pontilhada embaixo do texto, cursor aparece interrogação e adiciona espaço entre as informações*/
  
.tooltip .tooltiptext {
  visibility: hidden;
  width: 300px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  position: absolute;
  z-index: 1;
  top: -1%; 
  left: 80%;
  transform: translateX(-50%); 
}
/* Div feito para o sistema da decifração, tamanho, cor do fundo e letra, onde ficaria alinhado dentro desse quadrado, tamanho da borda
e formato "aspecto 3D", posição compacta das escritas uma abaixo da outra, o quanto acima o texto decifrado fica sobrepondo, quão de
posição abaixo o texto decifrado fica, centraliza a informação do texto decifrado e centraliza o texto decifrado horizontalmente */

.tooltip:hover .tooltiptext {
  visibility: visible;
}
/* Div com hover é utilizado para ativar um elemento por meio de alguma ação de usuário, nesse caso, quando passado o mouse em cima 
do elemento. Visibility com a opção visivel para aparecer o texto decifrado e não ocultar.*/

.video-container {
  width: 50%; 
 margin-left: 100px;
}
/*Div usada para definir a largura do video e para adicionar o espaço entre o vídeo e as informações*/
